package MyElements::sayHelloResponse;
use strict;
use warnings;

{ # BLOCK to scope variables

sub get_xmlns { 'urn:HelloWorld' }

__PACKAGE__->__set_name('sayHelloResponse');
__PACKAGE__->__set_nillable();
__PACKAGE__->__set_minOccurs();
__PACKAGE__->__set_maxOccurs();
__PACKAGE__->__set_ref();

use base qw(
    SOAP::WSDL::XSD::Typelib::Element
    SOAP::WSDL::XSD::Typelib::ComplexType
);
use Class::Std::Fast::Storable constructor => 'none';
use base qw(SOAP::WSDL::XSD::Typelib::ComplexType);

Class::Std::initialize();

{ # BLOCK to scope variables

my %sayHelloResult_of :ATTR(:get<sayHelloResult>);

__PACKAGE__->_factory(
    [ qw(
        sayHelloResult
    ) ],
    {
        sayHelloResult => \%sayHelloResult_of,
    },
    {
        sayHelloResult => 'SOAP::WSDL::XSD::Typelib::Builtin::string',
    }
);

} # end BLOCK







} # end of BLOCK
1;

# __END__

=pod

=head1 NAME

MyElements::sayHelloResponse

=head1 DESCRIPTION

Perl data type class for the XML Schema defined element
sayHelloResponse from the namespace urn:HelloWorld.

=head1 METHODS

=head2 new

 my $element = MyElements::sayHelloResponse->new($data);

Constructor. The following data structure may be passed to new():

 {
   sayHelloResult =>  $some_value, # string
 },

=head1 AUTHOR

Generated by SOAP::WSDL

=cut

